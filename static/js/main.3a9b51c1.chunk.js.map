{"version":3,"sources":["Photo.js","App.js","index.js"],"names":["Photo","image","urls","regular","alt_description","likes","user","name","portfolio_url","profile_img","profile_image","medium","className","src","alt","href","clientID","process","App","useState","loading","setLoading","photos","setPhotos","page","setPage","query","setQuery","newImages","setNewImages","mounted","useRef","fetchImages","a","urlPage","urlQuery","url","fetch","response","json","data","results","useEffect","current","oldPage","event","window","innerHeight","scrollY","document","body","scrollHeight","addEventListener","removeEventListener","type","placeholder","value","onChange","e","target","onClick","preventDefault","map","index","key","ReactDOM","render","StrictMode","getElementById"],"mappings":"6PA4BeA,EA1BD,SAAC,GASR,IARcC,EAQf,EARFC,KAAQC,QACRC,EAOE,EAPFA,gBACAC,EAME,EANFA,MAME,IALFC,KACIC,EAIF,EAJEA,KACAC,EAGF,EAHEA,cACyBC,EAE3B,EAFEC,cAAiBC,OAGrB,OACI,6BAASC,UAAU,SACf,yBAAKC,IAAKZ,EAAOa,IAAKV,IACtB,yBAAKQ,UAAU,cACX,6BACI,4BAAKL,GACL,2BAAIF,EAAJ,WAEJ,uBAAGU,KAAMP,GACL,yBAAKK,IAAKJ,EAAaK,IAAKP,EAAMK,UAAU,iBCf1DI,EAAQ,qBAAiBC,+CAmIhBC,MA/Hf,WAAgB,IAAD,EACmBC,oBAAS,GAD5B,mBACJC,EADI,KACKC,EADL,OAEiBF,mBAAS,IAF1B,mBAEJG,EAFI,KAEIC,EAFJ,OAGaJ,mBAAS,GAHtB,mBAGJK,EAHI,KAGEC,EAHF,OAIeN,mBAAS,IAJxB,mBAIJO,EAJI,KAIGC,EAJH,OAKuBR,oBAAS,GALhC,mBAKJS,EALI,KAKOC,EALP,KAMLC,EAAUC,kBAAO,GAEjBC,EAAW,uCAAG,oCAAAC,EAAA,6DAChBZ,GAAW,GAELa,EAHU,gBAGSV,GACnBW,EAJU,iBAIWT,GAGvBU,EADAV,EACG,UAjBA,2CAiBA,OAAkBV,GAAlB,OAA6BkB,GAA7B,OAAuCC,GAEvC,UApBF,oCAoBE,OAAgBnB,GAAhB,OAA2BkB,GATlB,kBAYWG,MAAMD,GAZjB,cAYNE,EAZM,iBAaOA,EAASC,OAbhB,QAaNC,EAbM,OAgBRjB,EADAG,GAAkB,IAATF,EACC,SAACF,GAAD,mBAAgBkB,EAAKC,UACxBf,EACG,SAACJ,GAAD,4BAAgBA,GAAhB,YAA2BkB,EAAKC,WAEhC,SAACnB,GAAD,4BAAgBA,GAAhB,YAA2BkB,MAEzCX,GAAa,GACbR,GAAW,GAvBC,kDAyBZQ,GAAa,GACbR,GAAW,GA1BC,0DAAH,qDA+BjBqB,qBAAU,WACNV,MAED,CAACR,IAEJkB,qBAAU,WACDZ,EAAQa,QAIRf,IACDR,GACJK,GAAQ,SAACmB,GAAD,OAAaA,EAAU,MAL3Bd,EAAQa,SAAU,IAOvB,CAACf,IAEJ,IAAMiB,EAAQ,WAENC,OAAOC,YAAcD,OAAOE,SAC5BC,SAASC,KAAKC,aAAe,GAE7BtB,GAAa,IAgCrB,OA7BAa,qBAAU,WAEN,OADAI,OAAOM,iBAAiB,SAAUP,GAC3B,kBAAMC,OAAOO,oBAAoB,SAAUR,MACnD,IA2BC,8BACI,6BAASjC,UAAU,UACf,0BAAMA,UAAU,eACZ,2BACI0C,KAAK,OACLC,YAAY,SACZ3C,UAAU,aACV4C,MAAO9B,EACP+B,SAAU,SAACC,GACP/B,EAAS+B,EAAEC,OAAOH,UAG1B,4BACIF,KAAK,SACL1C,UAAU,aACVgD,QAzBC,SAACF,GAClBA,EAAEG,iBACGnC,IACQ,IAATF,EAIJC,EAAQ,GAHJO,OAuBY,kBAAC,IAAD,SAKZ,6BAASpB,UAAU,UACf,yBAAKA,UAAU,iBACVU,EAAOwC,KAAI,SAAC7D,EAAO8D,GAChB,OAAO,kBAAC,EAAD,eAAOC,IAAKD,GAAW9D,QAGrCmB,GAAW,wBAAIR,UAAU,WAAd,iBC9H5BqD,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFlB,SAASmB,eAAe,W","file":"static/js/main.3a9b51c1.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Photo = ({\n    urls: { regular: image },\n    alt_description,\n    likes,\n    user: {\n        name,\n        portfolio_url,\n        profile_image: { medium: profile_img },\n    },\n}) => {\n    return (\n        <article className=\"photo\">\n            <img src={image} alt={alt_description} />\n            <div className=\"photo-info\">\n                <div>\n                    <h4>{name}</h4>\n                    <p>{likes} likes</p>\n                </div>\n                <a href={portfolio_url}>\n                    <img src={profile_img} alt={name} className=\"user-img\" />\n                </a>\n            </div>\n        </article>\n    );\n};\n\nexport default Photo;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { FaSearch } from \"react-icons/fa\";\nimport Photo from \"./Photo\";\n\n// https://api.unsplash.com/photos/?client_id=YOUR_ACCESS_KEY\n\nconst clientID = `?client_id=${process.env.REACT_APP_ACCESS_KEY_UNSPLASH}`;\nconst mainUrl = `https://api.unsplash.com/photos/`;\nconst searchUrl = `https://api.unsplash.com/search/photos/`;\n\nfunction App() {\n    const [loading, setLoading] = useState(false);\n    const [photos, setPhotos] = useState([]);\n    const [page, setPage] = useState(1);\n    const [query, setQuery] = useState(\"\");\n    const [newImages, setNewImages] = useState(false);\n    const mounted = useRef(false);\n\n    const fetchImages = async () => {\n        setLoading(true);\n        let url;\n        const urlPage = `&page=${page}`;\n        const urlQuery = `&query=${query}`;\n\n        if (query) {\n            url = `${searchUrl}${clientID}${urlPage}${urlQuery}`;\n        } else {\n            url = `${mainUrl}${clientID}${urlPage}`;\n        }\n        try {\n            const response = await fetch(url);\n            const data = await response.json();\n            // console.log(data);\n            if (query && page === 1) {\n                setPhotos((photos) => [...data.results]);\n            } else if (query) {\n                setPhotos((photos) => [...photos, ...data.results]);\n            } else {\n                setPhotos((photos) => [...photos, ...data]);\n            }\n            setNewImages(false);\n            setLoading(false);\n        } catch (error) {\n            setNewImages(false);\n            setLoading(false);\n            // console.log(error);\n        }\n    };\n\n    useEffect(() => {\n        fetchImages();\n        // eslint-disable-next-line\n    }, [page]);\n\n    useEffect(() => {\n        if (!mounted.current) {\n            mounted.current = true;\n            return;\n        }\n        if (!newImages) return;\n        if (loading) return;\n        setPage((oldPage) => oldPage + 1);\n        // eslint-disable-next-line\n    }, [newImages]);\n\n    const event = () => {\n        if (\n            window.innerHeight + window.scrollY >=\n            document.body.scrollHeight - 5\n        ) {\n            setNewImages(true);\n        }\n    };\n    useEffect(() => {\n        window.addEventListener(\"scroll\", event);\n        return () => window.removeEventListener(\"scroll\", event);\n    }, []);\n\n    // Below is buggy code, because at first mount loading is always false instead I fixed the code with 2 useEffects and useRef. I used useRef because comp. doesnt rerender when useref changes.\n    /*    useEffect(() => {\n        const event = window.addEventListener(\"scroll\", () => {\n            if (\n                !loading &&\n                window.innerHeight + window.scrollY >=\n                    document.body.scrollHeight - 5\n            ) {\n                setPage((old) => old + 1);                \n            }\n        });\n        return () => window.removeEventListener(\"scroll\", event);\n        // eslint-disable-next-line\n    }, []);\n */\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (!query) return;\n        if (page === 1) {\n            fetchImages();\n            return;\n        }\n        setPage(1);\n    };\n    return (\n        <main>\n            <section className=\"search\">\n                <form className=\"search-form\">\n                    <input\n                        type=\"text\"\n                        placeholder=\"search\"\n                        className=\"form-input\"\n                        value={query}\n                        onChange={(e) => {\n                            setQuery(e.target.value);\n                        }}\n                    />\n                    <button\n                        type=\"submit\"\n                        className=\"submit-btn\"\n                        onClick={handleSubmit}\n                    >\n                        <FaSearch />\n                    </button>\n                </form>\n            </section>\n\n            <section className=\"photos\">\n                <div className=\"photos-center\">\n                    {photos.map((image, index) => {\n                        return <Photo key={index} {...image} />;\n                    })}\n                </div>\n                {loading && <h2 className=\"loading\">Loading...</h2>}\n            </section>\n        </main>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}